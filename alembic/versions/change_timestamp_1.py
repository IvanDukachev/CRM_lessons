"""Change timestamp_1

Revision ID: 473ebd820d09
Revises: 0d16ed572172
Create Date: 2024-11-20 20:41:47.870517

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '473ebd820d09'
down_revision: Union[str, None] = '0d16ed572172'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('schedule_course', 'start_date',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DATE(),
               existing_nullable=False)
    op.alter_column('schedule_course', 'end_date',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DATE(),
               existing_nullable=False)
    op.alter_column('schedule_course', 'start_time',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.TIME(),
               existing_nullable=False)
    op.alter_column('schedule_course', 'end_time',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.TIME(),
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('schedule_course', 'end_time',
               existing_type=sa.TIME(),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('schedule_course', 'start_time',
               existing_type=sa.TIME(),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('schedule_course', 'end_date',
               existing_type=sa.DATE(),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('schedule_course', 'start_date',
               existing_type=sa.DATE(),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    # ### end Alembic commands ###
